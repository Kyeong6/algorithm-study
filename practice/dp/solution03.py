"""
효율적인 화폐 구성

N가지 종류의 화폐가 존재, 화폐들의 개수를 최소한으로 이용해서 그 가치의 합이 M원이 되도록 함
이때 각 종류의 화폐는 몇 개라도 사용 가능
예를 들어 2원,3원 단위의 화폐가 있을 때는 15원을 만들기 위해 3원을 5개 사용하는 것이 가장 최소한의 화폐 개수
M원을 만들기 위한 최소한의 화폐 개수를 출력하는 프로그램 작성

- 입력 조건
1. 첫째 줄에 N,M이 주어짐(1 <= N <= 100, 1 <= M <= 10,000)
2. 이후의 N개의 줄에는 각 화폐의 가치가 주어짐. 화폐의 가치는 10,000보다 작거나 같은 자연수

- 출력 조건
첫째 줄에 최소 화폐 개수를 출력. 불가능할 때는 -1을 출력
"""

# 입력 받기
n, m = map(int, input().split())

array = []

for i in range(n):
    array.append(int(input()))

# DP 테이블 초기화
d = [10001] * (m+1)

# DP 수행(Bottom-up)
d[0] = 0
for i in range(n):
    for j in range(array[i], m+1):
        if d[j-array[i]] != 10001: #(i-k)원을 만드는 방법 존재
            d[j] = min(d[j], d[j-array[i]+1])

# 계산된 결과 출력
if d[m] == 10001: # 최종적으로 M원을 만드는 방법이 없는 경우
    print(-1)
else:
    print(d[m])